{"version":3,"sources":["../../src/utils/escape-html.js"],"names":[],"mappings":"AAAA;;;;AAEA,IAAM,M;AACN,CAAE,CAAC,IAAD,EAAO,OAAP,CAAF,EACE,CAAC,IAAD,EAAO,MAAP,CADF,EAEE,CAAC,IAAD,EAAO,MAAP,CAFF,EAGE,CAAC,IAAD,EAAO,QAAP,CAHF,EAIE,CAAC,IAAD,EAAO,QAAP,CAJF,EAKE,CAAC,IAAD,EAAO,SAAP,CALF,CADA;;;;;;;AAcA,OAAO,OAAP,GAAiB,UAAC,GAAD,EAAS;AACxB,SAAO,IAAI,MAAJ,CAAW,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,EAAE,OAAF,6BAAa,CAAb,EAAV;AAAA,GAAX,EAAsC,GAAtC,CAAP;AACD,CAFD","file":"escape-html.js","sourcesContent":["'use strict'\r\n\r\nconst map = // [[regexp of character(s) to match, entity to replace with]]\r\n[ [/&/g, '&amp;'],\r\n  [/>/g, '&gt;'],\r\n  [/</g, '&lt;'],\r\n  [/\"/g, '&quot;'],\r\n  [/'/g, '&apos;'],\r\n  [/`/g, '&grave;']\r\n]\r\n\r\n/**\r\n * Properly escapes HTML tags and special characters to prevent mischief.\r\n * @param {string} str - A string that we don't want to contain any HTML or special characters.\r\n * @return {string} - The original string, properly escaped.\r\n */\r\nmodule.exports = (str) => {\r\n  return map.reduce((p, c) => p.replace(...c), str)\r\n}\r\n"]}