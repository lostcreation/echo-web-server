{"version":3,"sources":["../../src/utils/escape-html.js"],"names":[],"mappings":";;;;AAAA,IAAM,U;AACN,CAAE,CAAC,IAAD,EAAO,OAAP,CAAF,EACE,CAAC,IAAD,EAAO,MAAP,CADF,EAEE,CAAC,IAAD,EAAO,MAAP,CAFF,EAGE,CAAC,IAAD,EAAO,QAAP,CAHF,EAIE,CAAC,IAAD,EAAO,QAAP,CAJF,EAKE,CAAC,IAAD,EAAO,SAAP,CALF,CADA;;;;;;;;AAeA,OAAO,OAAP,GAAiB,UAAC,GAAD,EAAS;AACxB,SAAO,QAAQ,MAAR,CAAe,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,EAAE,OAAF,6BAAa,CAAb,EAAV;AAAA,GAAf,EAA0C,GAA1C,CAAP;AACD,CAFD","file":"escape-html.js","sourcesContent":["const charMap = // [[regexp of character to match, entity to replace with]]\n[ [/&/g, '&amp;'],\n  [/>/g, '&gt;'],\n  [/</g, '&lt;'],\n  [/\"/g, '&quot;'],\n  [/'/g, '&apos;'],\n  [/`/g, '&grave;']\n]\n\n/**\n * Properly escapes HTML tags and special characters to prevent mischief.\n * @param {string} str - A string that we don't want to contain any HTML or special characters.\n * @return {string} - A string that properly escapes any HTML and special characters.\n */\n\nmodule.exports = (str) => {\n  return charMap.reduce((p, c) => p.replace(...c), str)\n}\n"]}